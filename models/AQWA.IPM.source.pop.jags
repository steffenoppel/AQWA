
model {

#----------------------------------------
# 1. Define the priors for the parameters
#----------------------------------------

# Initial population sizes

N1[1,1] ~ dnorm(600, 0.0001)T(0,)           # 1-year old individuals
NadSurv[1,1] ~ dnorm(1600, 0.0001)T(0,)      # Adults >= 2 years
Nfem.breed1[1,1] <- (Ntot[1,1]*(1-prop.males))
Nfem.breed2[1,1] ~ dbin(db[1,1],round(Nfem.breed1[1,1]))
chicks[1,1] <- Nfem.breed1[1,1] * mfec1 + Nfem.breed2[1,1]*mfec2			# total fecundity
chicksrd[1,1] <- round(chicks[1,1])



# DEMOGRAPHIC PARAMETERS INFORMED BY DATA FROM OTHER STUDIES
mfec1 ~ dnorm(3.15,1/(0.16^2))			   ### fecundity = number of fledglings raised per FIRST brood
mfec2 ~ dnorm(2.75,1/(0.2^2))			   ### fecundity = number of fledglings raised per SECOND brood, should be slightly lower than first brood
prop.males ~ dnorm(0.56, 1/(0.01^2))T(0,1)  ### proportion of population that is male and can therefore be counted in population - 56%


# SURVIVAL PRIORS FOR AGE AND SEX GROUPS

phi.ad ~ dnorm(0.385,1/(0.04^2))  ## adult femae survival for population projections based on info from Poland
mphi[2] ~ dbeta(1.2,1.2)			### survival of adult birds for estimation - NOT USED IN POPULATION PROCESS BECAUSE BASED ON TOO FEW DATA
mphi[1] ~	dbeta(1.2,1.2)	### survival of first year birds
      for (i in 1:n.marked){
        for (t in f[i]:(n.markocc-1)){
          phi[i,t] <- mphi[age[i,t]]
          p[i,t] <- mean.p[sex[i]]
        } #t
        p[i,n.markocc] <- mean.p[sex[i]]
      } #i
      
# PRIORS FOR RESIGHTING PROBABILITY BASED ON SE POLAND
mean.p[1] ~ dnorm(0.57, 1/(0.04^2))                  # resighting probability for males
mean.p[2] ~ dnorm(0.26, 1/(0.04^2))T(0,)            # resighting probability for females



#--------------------------------------------------
# 2. Random variation in annual survival and productivity
#--------------------------------------------------

for (t in 1:(ncountyears+nprojyears)){

   phij[t] <- mphi[1]			# fixed effect for every occasion - no temporal variability
   phia[t] <- mphi[2]			# fixed effect for every occasion - no temporal variability
   fec1[t] <-mfec1
}

#Fec 2, the fecundity of second broods, is only applied to future scenarios now

for(t in 1:nprojyears){
  fec2[t]<-mfec2
}

#-----------------------
# 3. Derived parameters
#-----------------------

# Population growth rate
for (t in 1:(ncountyears-1)){
   lambda[t] <- Ntot[1,t+1] / max(1,Ntot[1,t]) # prevent invalid parent error when Ntot=0
   loglambda[t]<-log(lambda[t])## for calculating geometric mean of overall population growth rate
}
    #### OVERALL POPULATION GROWTH RATE  #########
    mean.lambda<-exp((1/(ncountyears-1))*sum(loglambda[1:(ncountyears-1)]))   # Geometric mean


#--------------------------------------------
# 4. Likelihood for population count data
#--------------------------------------------

# 4.1. double brooding for all years

for(ns in 1:nscenarios){
  for(t in 1:(ncountyears+nprojyears)){
  
  db[ns,t] ~ dnorm(0.25,1/(0.07^2))T(0,1)

  }
}

# 4.2 System process
for (t in 2:ncountyears){
   
    Nfem.breed1[1,t] <- (Ntot[1,t]*(1-prop.males))
    Nfem.breed2[1,t] ~ dbin(db[1,t],round(Nfem.breed1[1,t]))

    chicks[1,t] <- Nfem.breed1[1,t] * fec1[t] + Nfem.breed2[1,t]*fec2[t]			# total fecundity
    chicksrd[1,t] <- round(chicks[1,t])
        
		N1[1,t] ~ dbin(phij[t-1],chicksrd[1,t-1]) 
		NadSurv[1,t] ~ dbin(phi.ad,round((Ntot[1,t-1])))
}

# 4.3 Observation process
for (t in 1:ncountyears){
   	    Ntot[1,t] <- NadSurv[1,t] + N1[1,t]								## total population		
	      Ntotobs[t] <- max(1,(Ntot[1,t]))*prop.males								## only males are counted, which is 56% of population
	      Ntotrd[t] <- round(Ntotobs[t])
        y[t] ~ dpois(Ntotrd[t])
        
}
   

# 4.4 Survival estimation
   for (i in 1:n.marked){
    # Define latent state at first capture
    z[i,f[i]] <- 1
    for (t in (f[i]+1):n.markocc){
      # State process
      z[i,t] ~ dbern(z[i,t-1] * phi[i,t-1])
      # Observation process
      y.marked[i,t] ~ dbern(z[i,t] * p[i,t])
    } #t
  } #i
   

      
# -------------------------------------------------        
# 5. PREDICTION INTO THE FUTURE WITH ONGOING CAPTURE FOR TRANSLOCATION
# -------------------------------------------------


### COPY THE PAST VALUES FOR ALL SCENARIOS

for(ns in 2:nscenarios){
  for(t in 1:ncountyears){
  
    Nfem.breed1[ns,t] <- Nfem.breed1[1,t]
    Nfem.breed2[ns,t] <- Nfem.breed2[1,t]
    chicks[ns,t] <- chicks[1,t]
    chicksrd[ns,t] <- chicksrd[1,t]
    N1[ns,t] <- N1[1,t]
		NadSurv[ns,t] <- NadSurv[1,t]
		Ntot[ns,t] <-Ntot[1,t]
  }
}





    
## POPULATION PROCESS

    for(ns in 1:nscenarios){
      for (t in (ncountyears+1):(ncountyears+nprojyears)){
        
            # Apply the removal of nests
            Nfem.breed1[ns,t] <- (Ntot[ns,t]*(1-prop.males)) - n_nest_removed[ns]    ### N breeders is reduced by number of nests that are removed
            Nfem.breed2[ns,t] ~ dbin(db[ns,t],round(Nfem.breed1[ns,t] + n_nest_removed[ns]))  ### the removed nests woud still allow the females to second brood

      	    chicks[ns,t] <- Nfem.breed1[ns,t] * fec1[t] + Nfem.breed2[ns,t]*mfec2			# total fecundity
      	    chicksrd[ns,t] <- round(chicks[ns,t])
		        N1[ns,t] ~ dbin(phij[t-1],max(chicksrd[ns,t-1],1)) 
		        NadSurv[ns,t] ~ dbin(phi.ad,round((Ntot[ns,t-1])))
		   	    Ntot[ns,t] <- NadSurv[ns,t] + N1[ns,t]								## total population	
  	} #Time loop
  	
  	
  	## FINAL POPULATION GROWTH RATE (steady state after reintroduction ends)
  	# Population growth rate
    for (t in (ncountyears):(ncountyears+nprojyears-1)){
      lambda.f[ns,t] <- Ntot[ns,t+1] / max(1,Ntot[ns,t]) # prevent invalid parent error when Ntot=0
      loglambda.f[ns,t]<-log(lambda.f[ns,t])## for calculating geometric mean of overall population growth rate
    }
    #### OVERALL POPULATION GROWTH RATE  #########
    proj.lambda[ns]<-exp((1/10)*sum(loglambda.f[ns,(ncountyears):(ncountyears+nprojyears-1)]))   # Geometric mean
  	
  } #Nscenarios loop
}

