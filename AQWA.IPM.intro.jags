
model {


#----------------------------------------
# 1. Define the priors for the parameters
#----------------------------------------

# Initial population sizes
N1[1] ~ dnorm(60, 0.0001)T(0,)           # 1-year old individuals
NadSurv[1] ~ dnorm(100, 0.0001)T(0,)      # Adults >= 2 years

# DEMOGRAPHIC PARAMETERS INFORMED BY DATA FROM OTHER STUDIES
mphia ~ dunif(0.28,0.56)				### survival of adult females
mphij ~ dunif(0.20,0.44)				### survival of first year females
mfec1 ~ dunif(2.4,4.0)			   ### fecundity = number of fledglings raised per FIRST brood
mfec2 ~ dunif(1.0,2.5)			   ### fecundity = number of fledglings raised per SECOND brood, should be slightly lower than first brood



#--------------------------------------------------
# 2. Random variation in annual survival and productivity
#--------------------------------------------------
# CHANGE THE SCALE OF DEMOGRAPHIC PARAMETERS TO FACILITATE INCORPORATION OF COVARIATES
l.mphij<-log(mphij/(1-mphij))	    # juvenile survival probability on logit scale;
l.mphia<-log(mphia/(1-mphia))			# adult survival probability on logit scale

# RANDOM ANNUAL EFFECT ON SURVIVAL
tau.surv<-1/pow(sigma.surv,2)
sigma.surv~dunif(0,5)

for (t in 1:(ncountyears+nintroyears)){
   eps.surv[t] ~ dnorm(0, tau.surv)						# random variation around annual survival
   logit(phij[t]) <- l.mphij+ eps.surv[t]			# add random effect - could add environmental predictors here (if we had any)
   logit(phia[t]) <- l.mphia+ eps.surv[t]			# add random effect - could add environmental predictors here (if we had any) 
}


#-----------------------
# 3. Derived parameters
#-----------------------

# Population growth rate
for (t in 1:(ncountyears-1)){
   lambda[t] <- Ntot[t+1] / min(1,Ntot[t]) # prevent invalid parent error when Ntot=0
   }


#--------------------------------------------
# 4. Likelihood for population count data
#--------------------------------------------
   # 4.1 System process
   for (t in 2:ncountyears){
        db[t-1] ~ dunif(0,0.5)            ### proportion of double-brooding females who would then have F1+F2 fecundity												# random variation around fecundity
        Nfemdb[t-1]  ~ dbin(db[t-1],round((Ntot[t-1])*0.44))  ## random draw of double brooding females
      	chicks[t-1] <- (Ntot[t-1])*0.44* mfec1 + Nfemdb[t-1]*mfec2			# total fecundity
      	chicksrd[t-1] <- round(chicks[t-1])
		N1[t] ~ dbin(phij[t-1],chicksrd[t-1]) 
		NadSurv[t] ~ dbin(phia[t-1],round((Ntot[t-1])))
	}

   # 4.2 Observation process
   for (t in 1:ncountyears){
   	    Ntot[t] <- NadSurv[t] + N1[t]								## total population		
	      Ntotobs[t] <- max(1,(Ntot[t]))*0.56								## only males are counted, which is 56% of population		
	      Ntotrd[t] <- round(Ntotobs[t])			
        y[t] ~ dpois(Ntotrd[t])
   }
      
      
# -------------------------------------------------        
# 5. PREDICTION INTO THE FUTURE WITH ONGOING RELEASES
# -------------------------------------------------
### POTENTIALLY INCLUDE SCENARIOS FOR N CAPTIVE BIRDS AND NUMBER OF YEARS

    #for (ncr in 1:scen.capt.release){
    CAPT.ADD[ncountyears] <-48   ## 48 were released in first year

      # SPECIFY IMPROVEMENT OF SURVIVAL
      #for (is in 1:scen.imp.surv){ 
    
        # improve.surv ~ dunif(1,1.10)
        # fut.survival[ncr,is] <-imp.surv[is]*mean(ann.surv.terrvis[1:nyears.terrvis])

        ## POPULATION PROCESS
        
        for (t in (ncountyears+1):(ncountyears+nintroyears)){
        
            # CAPTIVE RELEASE OF JUVENILE BIRDS

            CAPT.ADD[t] ~ dunif(45,50)   ## randomly draw a number for each year
            db[t-1] ~ dunif(0,0.5)            ### proportion of double-brooding females who would then have F1+F2 fecundity												# random variation around fecundity
            Nfemdb[t-1]  ~ dbin(db[t-1],round((Ntot[t-1])*0.44))  ## random draw of double brooding females
      	    chicks[t-1] <- (Ntot[t-1])*0.44* mfec1 + Nfemdb[t-1]*mfec2			# total fecundity
      	    chicksrd[t-1] <- round(chicks[t-1]) + round(CAPT.ADD[t-1])
		        N1[t] ~ dbin(phij[t-1],chicksrd[t-1]) 
		        NadSurv[t] ~ dbin(phia[t-1],round((Ntot[t-1])))
		   	    Ntot[t] <- NadSurv[t] + N1[t]								## total population	
	}


    #  } # end scenario of imp.surv

    #} # end scenario of n capt released
      
      
      
      
      
}

